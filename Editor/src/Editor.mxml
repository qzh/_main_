<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   name="TileEditor" width="1024" height="768" showStatusBar="false" backgroundAlpha="0"
					   creationComplete="application_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import editor.view.NewTilesetPanel;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			import tile.core.Layer;
			import tile.core.TileImage;
			import tile.core.Tileset;
			import tile.managers.Director;
			import tile.managers.MapManager;
			import tile.managers.ResourceManager;
			import tile.render.StarlingRoot;
			
			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				MapManager.getInstance().load();
				MapManager.getInstance().refreshSource();
				
				var vp:Rectangle = new Rectangle(container.x, container.y, container.width, container.height);
				var star:StarlingRoot = new StarlingRoot(vp);
				container.addElement(star);
				
				var layerLength:int = MapManager.getInstance().source.layers.length;
				var selectedLayer:Layer = MapManager.getInstance().source.layers.getItemAt(layerLength-1) as Layer;
				layerList.selectedItem = selectedLayer;
				MapManager.getInstance().currentLayer = selectedLayer;
			}
			
			protected function addLayerButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function deleteLayerButton_clickHandler(event:MouseEvent):void
			{
				var layer:Layer = layerList.selectedItem as Layer;
				if(layer)MapManager.getInstance().source.removeItem(layer, MapManager.getInstance().source.layers);
			}
			
			protected function addImageButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function removeImageButton_clickHandler(event:MouseEvent):void
			{
				var image:TileImage = imageList.selectedItem as TileImage;
				if(image)MapManager.getInstance().source.removeItem(image, MapManager.getInstance().source.images);
			}
			
			protected function addTilesetButton_clickHandler(event:MouseEvent):void
			{
				var panel:NewTilesetPanel = new NewTilesetPanel();
				PopUpManager.addPopUp(panel, this, true);
				PopUpManager.centerPopUp(panel);
			}
			
			protected function deleteTilesetButton_clickHandler(event:MouseEvent):void
			{
				var tile:Tileset = tilesetList.selectedItem as Tileset;
				if(tile)MapManager.getInstance().source.removeItem(tile, MapManager.getInstance().source.tilesets);
			}
			
			protected function saveButton_clickHandler(event:MouseEvent):void
			{
				MapManager.getInstance().save();
			}
			
			
			protected function layerList_changeHandler(event:IndexChangeEvent):void
			{
				var layer:Layer = layerList.selectedItem as Layer;
				if(layer)
				{
					MapManager.getInstance().currentLayer = layer;
				}
			}
			
			protected function tileTools_changeHandler(event:Event):void
			{
				var selectedValue:int = int(TileTools.selectedValue);
				Director.getInstance().toolsMode = selectedValue;
			}
			
			protected function tilesetList_changeHandler(event:IndexChangeEvent):void
			{
				var selectedTileset:Tileset = tilesetList.selectedItem as Tileset;
				MapManager.getInstance().currentTileset = selectedTileset;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="TileTools" change="tileTools_changeHandler(event)"/>
	</fx:Declarations>
	<s:Button x="11" y="10" id="saveButton" width="107" height="35" label="Save..." 
			  click="saveButton_clickHandler(event)"/>
	<s:List id="layerList" x="10" y="55" width="250" height="300" 
			change="layerList_changeHandler(event)"
			dataProvider="{MapManager.getInstance().source.layers}"
			itemRenderer="editor.view.LayerItemRenderer"></s:List>
	<s:Button id="addLayerButton" x="10" y="363" label="+ Layer"
			  click="addLayerButton_clickHandler(event)" enabled="false"/>
	<s:Button id="deleteLayerButton" x="92" y="363" label="- Layer"
			  click="deleteLayerButton_clickHandler(event)" enabled="false"/>
	<s:List id="imageList" x="10" y="400" width="250" height="300"
			dataProvider="{MapManager.getInstance().source.images}"
			itemRenderer="editor.view.ImageItemRenderer"></s:List>
	<s:Button id="addImageButton" x="10" y="708" label="+ Image"
			  click="addImageButton_clickHandler(event)" enabled="false"/>
	<s:Button id="removeImageButton" x="92" y="708" label="- Image"
			  click="removeImageButton_clickHandler(event)" enabled="false"/>
	<s:List id="tilesetList" x="794" y="55" width="220" height="645" 
			change="tilesetList_changeHandler(event)"
			dataProvider="{MapManager.getInstance().source.tilesets}"
			itemRenderer="editor.view.TilesetItemRenderer"></s:List>
	<s:Button id="addTilesetButton" x="861" y="708" label="+ Tileset"
			  click="addTilesetButton_clickHandler(event)"/>
	<s:Button id="deleteTilesetButton" x="944" y="708" label="- Tileset"
			  click="deleteTilesetButton_clickHandler(event)"/>
	<s:BorderContainer id="container" x="268" y="55" width="518" height="645" backgroundAlpha="0"
					   borderColor="#000000" borderStyle="solid" borderWeight="1"/>
	<s:HGroup x="413" y="30">
		<s:RadioButton label="Select" groupName="TileTools" id="selectTileRadio" selected="true" value="0"/>
		<s:RadioButton label="+ Tile" groupName="TileTools" id="addTileRadio" value="1"/>
		<s:RadioButton label="- Tile" groupName="TileTools" id="deleteTileRadio" value="2"/>
		<s:RadioButton label="Edit" groupName="TileTools" id="editTileRadio" value="3"/>
	</s:HGroup>
	
</s:WindowedApplication>
